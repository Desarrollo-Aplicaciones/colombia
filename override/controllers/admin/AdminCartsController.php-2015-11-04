<?php
class AdminCartsController extends AdminCartsControllerCore
{
	public function ajaxProcessAddDoctor(){
		Cart::addCartMedico(Tools::getValue('id_cart'),Tools::getValue('id_medico'));
	}

		public function displayAjaxSearchCarts()
	{	
		if(!empty($this->context->employee->id)){
			$this->context->cart->id_employee = $this->context->employee->id;
			$this->context->cart->update(); 
		}
		$id_customer = (int)Tools::getValue('id_customer');
		$carts = Cart::getCustomerCarts((int)$id_customer);
		$orders = Order::getCustomerOrders((int)$id_customer);
		$customer = new Customer((int)$id_customer);

		if (count($carts))
			foreach ($carts as $key => &$cart)
			{
				$cart_obj = new Cart((int)$cart['id_cart']);
				if ($cart['id_cart'] == $this->context->cart->id || !Validate::isLoadedObject($cart_obj) || $cart_obj->OrderExists())
					unset($carts[$key]);
				$currency = new Currency((int)$cart['id_currency']);
				$cart['total_price'] = Tools::displayPrice($cart_obj->getOrderTotal(), $currency);
			}
		if (count($orders))
			foreach ($orders as &$order)
				$order['total_paid_real'] = Tools::displayPrice($order['total_paid_real'], $currency);
		if ($orders || $carts)
			$to_return = array_merge($this->ajaxReturnVars(),
											array('carts' => $carts,
													 'orders' => $orders,
													 'found' => true));
		else
			$to_return = array_merge($this->ajaxReturnVars(), array('found' => false));

		echo Tools::jsonEncode($to_return);
	}

}
?>